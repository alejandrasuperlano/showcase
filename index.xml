<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Visual computing</title><link>https://mbolanoss.github.io/showcase/</link><description>Recent content in Introduction on Visual computing</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://mbolanoss.github.io/showcase/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://mbolanoss.github.io/showcase/docs/Taller-1/1-Visual-Illusions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mbolanoss.github.io/showcase/docs/Taller-1/1-Visual-Illusions/</guid><description>Visual Illusions üëÅ # Workshop Estudie, implemente y discuta posibles aplicaciones de algunos fen√≥menos visuales e ilusiones √≥pticas conocidas.
Illusion 1: Stepping Feet üë£ # Marco Teorico # La ilusi√≥n &amp;ldquo;Stepping Feet&amp;rdquo; es un fen√≥meno de percepci√≥n del movimiento, donde se percibe que el recuadro azul y amarillo var√≠an sus velocidades relativa de manera dram√°tica, aunque en realidad su movimiento es constante.
¬øQu√© est√° pasando? Cuando el recuadro azul se encuentra sobre las l√≠neas blancas, el contraste es alto, por lo cual el movimiento se percibe m√°s r√°pido que su velocidad real.</description></item><item><title/><link>https://mbolanoss.github.io/showcase/docs/Taller-1/2-Visual-Masking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mbolanoss.github.io/showcase/docs/Taller-1/2-Visual-Masking/</guid><description>Visual Masking üí° # Workshop Implementar una aplicaci√≥n web de procesamiento de imagenes que soporte varios kernels y adem√°s:
Visualizaci√≥n de histograma de la imagen Diferentes herramientes de luminosidad Marco te√≥rico # Kernel # Un kernel o mascara es una matriz usada para aplicar algun tipo de efecto como difuminado, detecci√≥n de bordes , sobre una imagen. Eso se logra realizando una convoluci√≥n entre el kernel y la imagen. ¬øQu√© es una convoluci√≥n?</description></item><item><title/><link>https://mbolanoss.github.io/showcase/docs/Taller-2/1-WebGL-3D-App/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mbolanoss.github.io/showcase/docs/Taller-2/1-WebGL-3D-App/</guid><description>3D APP : 3D Audio Visualizer üé∂ # Workshop Implement a 3d webgl application. The p5.treegl or any other libraries may be used
Marco te√≥rico # Se√±ales electromagn√©ticas # Como componente te√≥rico principal de la aplicaci√≥n, se tienen las se√±ales de electromagn√©ticas, las cuales, a manera de resumen, se pueden descomponer en varias ondas sinusoidales peri√≥dicas, y cada una tiene una serie de caracter√≠sticas propias de una onda electromagn√©tica. En particular, nos interesan 2 de estas:</description></item><item><title/><link>https://mbolanoss.github.io/showcase/docs/Taller-3/1-Color-Blending/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mbolanoss.github.io/showcase/docs/Taller-3/1-Color-Blending/</guid><description>Color Blending üî¥üü†üü° # Exercises Averiguar el c√≥digo js de los sketches de ejemplo. Implementar otros modos de blending. Tomar esta referencia como un punto de partida. Marco te√≥rico # Color Mixing # Existen 3 tipos de mezcla de colores: aditivo, sustractivo y promedio.
Aditivo Por convenci√≥n, los 3 colores primarios son el rojo, el verde y el azul. La ausencia de luz de cualquier color corresponde con negro. Si se mezclan los 3 colores en mismas propociones, el resultado es neutral (blanco o gris).</description></item><item><title/><link>https://mbolanoss.github.io/showcase/docs/Taller-3/2-Texturing-UV-Visualization-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mbolanoss.github.io/showcase/docs/Taller-3/2-Texturing-UV-Visualization-1/</guid><description>UV Visualization - Exercise 1 üî¥üü¢üîµ # Exercise Redefine the shape texture coordinates to turn the above image upside down.
Source Code # JavaScript: Ajustando coordenadas y en vertex # Construcci√≥n de la figura invirtiendo las coordenadas de la textura en el llamado a vertex.
La funci√≥n vertex tiene la siguiente estructura: vertex(x, y, [z], [u], [v]) Siendo los parametros los siguientes: x - x-coordinate of the vertex y - y-coordinate of the vertex z - z-coordinate of the vertex u - the vertex's texture u-coordinate v - the vertex's texture v-coordinate // Construcci√≥n de la figura invirtiendo las coordenadas de la textura // en el llamado a vertex let uvShader; function preload() { // No se pasa ninguna matriz al shader uvShader = readShader(&amp;#39;/showcase/sketches/uv_1/uv.</description></item><item><title/><link>https://mbolanoss.github.io/showcase/docs/Taller-3/3-Texturing-UV-Visualization-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mbolanoss.github.io/showcase/docs/Taller-3/3-Texturing-UV-Visualization-2/</guid><description> UV Visualization - Exercise 2 üü•üü©üü¶ # Soluci√≥n y Resultados # Utilice el primer selector para cambiar los canales visualizados. Utilice el segundo selector para cambiar la forma del filtro.</description></item><item><title/><link>https://mbolanoss.github.io/showcase/docs/Taller-3/4-Color-Brightness-and-Tinting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mbolanoss.github.io/showcase/docs/Taller-3/4-Color-Brightness-and-Tinting/</guid><description> Color Brightness and Tinting üë©‚Äçüé® # Soluci√≥n y Resultados # Utilice el 1er selector para cambiar el modo de brillo (Coloring Brightness Tool). Utilice el 2do selector para cambiar el modo de mezcla de colores (BlendMode). Utilice el checkbox para aplicar el tintado. Seleccione el color de tintado con el selector.</description></item><item><title/><link>https://mbolanoss.github.io/showcase/docs/Taller-3/5-Image-Processing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mbolanoss.github.io/showcase/docs/Taller-3/5-Image-Processing/</guid><description> Image/Video processing üñºÔ∏è #</description></item></channel></rss>