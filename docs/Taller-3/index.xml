<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Visual computing</title><link>https://mbolanoss.github.io/showcase/docs/Taller-3/</link><description>Recent content on Visual computing</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://mbolanoss.github.io/showcase/docs/Taller-3/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://mbolanoss.github.io/showcase/docs/Taller-3/1-Color-Blending/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mbolanoss.github.io/showcase/docs/Taller-3/1-Color-Blending/</guid><description>Color Blending üî¥üü†üü° # Exercises Averiguar el c√≥digo js de los sketches de ejemplo. Implementar otros modos de blending. Tomar esta referencia como un punto de partida. Marco te√≥rico # Color Mixing # Existen 3 tipos de mezcla de colores: aditivo, sustractivo y promedio.
Aditivo Por convenci√≥n, los 3 colores primarios son el rojo, el verde y el azul. La ausencia de luz de cualquier color corresponde con negro. Si se mezclan los 3 colores en mismas propociones, el resultado es neutral (blanco o gris).</description></item><item><title/><link>https://mbolanoss.github.io/showcase/docs/Taller-3/2-Texturing-UV-Visualization-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mbolanoss.github.io/showcase/docs/Taller-3/2-Texturing-UV-Visualization-1/</guid><description>UV Visualization - Exercise 1 üî¥üü¢üîµ # Exercise Redefinir las coordenas de textura de la figura, para invertir la imagen de abajo.
Soluci√≥n #1 # JavaScript: Ajustando coordenadas u &amp;amp; v en vertex # Construcci√≥n de la figura invirtiendo las coordenadas de la textura en el llamado a vertex.
La funci√≥n vertex tiene la siguiente estructura:
vertex(x, y, [z], [u], [v]) Siendo los parametros los siguientes:
x - x-coordinate of the vertex y - y-coordinate of the vertex z - z-coordinate of the vertex u - the vertex&amp;rsquo;s texture u-coordinate v - the vertex&amp;rsquo;s texture v-coordinate Source Code: JavaScript // Construcci√≥n de la figura invirtiendo las coordenadas de la textura // en el llamado a vertex let uvShader; function preload() { // No se pasa ninguna matriz al shader uvShader = readShader(&amp;#39;/showcase/sketches/uv_1/uv.</description></item><item><title/><link>https://mbolanoss.github.io/showcase/docs/Taller-3/3-Texturing-UV-Visualization-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mbolanoss.github.io/showcase/docs/Taller-3/3-Texturing-UV-Visualization-2/</guid><description>UV Visualization - Exercise 2 üü•üü©üü¶ # Exercises Incluir el canal azul dentro de la visualizaci√≥n uv. Utilizar otras figuras, diferentes a quad, como filtros. Soluci√≥n y Resultados # Utilice el primer selector para cambiar los canales visualizados. Utilice el segundo selector para cambiar la forma del filtro. Conclusiones # Es posible implementar filtros pasando un parametro de opacidad como uniforme al fragment shader. Referencias # Visual Computing. (2022, 15 noviembre).</description></item><item><title/><link>https://mbolanoss.github.io/showcase/docs/Taller-3/4-Color-Brightness-and-Tinting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mbolanoss.github.io/showcase/docs/Taller-3/4-Color-Brightness-and-Tinting/</guid><description> Color Brightness and Tinting üë©‚Äçüé® # Soluci√≥n y Resultados # Utilice el 1er selector para cambiar el modo de brillo (Coloring Brightness Tool). Utilice el 2do selector para cambiar el modo de mezcla de colores (BlendMode). Utilice el checkbox para aplicar el tintado. Seleccione el color de tintado con el selector.</description></item><item><title/><link>https://mbolanoss.github.io/showcase/docs/Taller-3/5-Image-Processing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mbolanoss.github.io/showcase/docs/Taller-3/5-Image-Processing/</guid><description> Image/Video processing üñºÔ∏è #</description></item></channel></rss>